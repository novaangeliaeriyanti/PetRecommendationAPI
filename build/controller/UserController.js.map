{"version":3,"sources":["../../server/controller/UserController.js"],"names":["SALT_ROUND","signup","req","res","username","firstname","lastname","email","password","phone","body","hashPassword","bcrypt","hash","result","context","models","users","create","user_name","user_firstname","user_lastname","user_email","user_password","user_phone","dataValues","send","error","status","update","returning","where","user_id","params","id","findOne","deleteRow","destroy","findAll","signin","compare","sendStatus"],"mappings":"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","sourcesContent":["import bcrypt from 'bcrypt';\r\nconst SALT_ROUND = 10;\r\n\r\nconst signup = async (req, res) => {\r\n    \r\n    const { username, firstname, lastname, email, password, phone } = req.body;\r\n    let hashPassword = password;\r\n    hashPassword = await bcrypt.hash(hashPassword, SALT_ROUND);\r\n    \r\n    try {\r\n        const result = await req.context.models.users.create({\r\n          user_name: username,\r\n          user_firstname: firstname,\r\n          user_lastname: lastname,\r\n          user_email: email,\r\n          user_password: hashPassword,\r\n          user_phone: phone,\r\n        });\r\n        const { user_name, user_firstname, user_lastname, user_email, user_phone } = result.dataValues;\r\n        res.send({ user_name, user_firstname, user_lastname, user_email, user_phone });\r\n    } catch (error) {\r\n        // res.status(404).send(error);\r\n        return res.status(404).send(\"no data input\");\r\n    }\r\n}\r\n\r\nconst update = async (req, res) => {\r\n  \r\n  const { username, firstname, lastname, email, password, phone } = req.body;\r\n  let hashPassword = password;\r\n  hashPassword = await bcrypt.hash(hashPassword, SALT_ROUND);\r\n\r\n  try {\r\n    const result = await req.context.models.users.update(\r\n      {\r\n        user_name: username,\r\n        user_firstname: firstname,\r\n        user_lastname: lastname,\r\n        user_email: email,\r\n        user_password: hashPassword,\r\n        user_phone: phone,\r\n      },\r\n      {\r\n        returning: true,\r\n        where: { user_id: req.params.id },\r\n      }\r\n    );\r\n    return res.send(result);\r\n  } catch (error) {\r\n    return res.status(404).send(\"no data update\");\r\n  }\r\n};\r\n\r\nconst findOne = async (req, res) => {\r\n  try {\r\n    const result = await req.context.models.users.findOne({\r\n      where: { user_id: req.params.id },\r\n    });\r\n    return res.send(result);\r\n  } catch (error) {\r\n    return res.status(404).send(\"not found\");\r\n  }\r\n};\r\n\r\nconst deleteRow = async (req, res) => {\r\n  try {\r\n    const result = await req.context.models.users.destroy({\r\n      where: { user_id: req.params.id },\r\n    });\r\n    res.send(\"delete\" + result + \"rows\");\r\n  } catch (error) {\r\n    return res.status(404).send(\"no data found\");\r\n  }\r\n};\r\n\r\nconst findAll = async (req, res) => {\r\n  try {\r\n    const result = await req.context.models.users.findAll();\r\n    return res.send(result);\r\n  } catch (error) {\r\n    return res.status(404).send(\"no data found\");\r\n  }\r\n};\r\n\r\nconst signin = async (req, res) => {\r\n  const { email, password } = req.body;\r\n\r\n  try {\r\n      const result = await req.context.models.users.findOne({\r\n          where: { user_email: email }\r\n      });\r\n      const {user_password } = result.dataValues;\r\n      const compare = await bcrypt.compare(password, user_password);\r\n      if (compare) {\r\n          return res.send(\"sign in succeed\");\r\n      } else {\r\n         return res.sendStatus(404);\r\n      }\r\n\r\n  } catch (error) {\r\n      return res.sendStatus(404);\r\n  }\r\n}\r\n\r\n\r\nexport default {\r\n  signup,\r\n  update,\r\n  findOne,\r\n  deleteRow,\r\n  findAll,\r\n  signin\r\n};\r\n"],"file":"UserController.js"}