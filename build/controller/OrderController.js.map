{"version":3,"sources":["../../server/controller/OrderController.js"],"names":["getOrderNumber","req","res","next","result","sequelize","query","type","QueryTypes","SELECT","orderName","ordername","error","status","json","message","createOrder","summary","summaryCart","order_discount","order_tax","order_city","order_address","order_status","order_user_id","body","context","models","orders","create","order_name","order_created_on","Date","order_total_qty","totalQty","order_subtotal","subTotal","order_total_due","parseInt","dataValues","findAllRows","findAll","send"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,cAAc,GAAG,OAAOC,GAAP,EAAWC,GAAX,EAAeC,IAAf,KAAsB;AACzC,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMC,sBAAUC,KAAV,CAAiB,iGAAjB,EACrB;AACIC,MAAAA,IAAI,EAAGF,sBAAUG,UAAV,CAAqBC;AADhC,KADqB,CAArB;AAIAR,IAAAA,GAAG,CAACS,SAAJ,GAAgBN,MAAM,CAAC,CAAD,CAAN,CAAUO,SAA1B;AACAR,IAAAA,IAAI;AACP,GAPD,CAOE,OAAOS,KAAP,EAAc;AACZV,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAGH,KAAK,CAACG;AAAjB,KAArB;AACH;AACJ,CAXD;;AAaA,MAAMC,WAAW,GAAG,OAAOf,GAAP,EAAWC,GAAX,EAAeC,IAAf,KAAsB;AACtC,QAAM;AAACc,IAAAA;AAAD,MAAYhB,GAAG,CAACiB,WAAtB;AACA,QAAM;AAACC,IAAAA,cAAD;AAAgBC,IAAAA,SAAhB;AAA0BC,IAAAA,UAA1B;AAAqCC,IAAAA,aAArC;AAAmDC,IAAAA,YAAnD;AAAgEC,IAAAA;AAAhE,MAAiFvB,GAAG,CAACwB,IAA3F;;AAEA,MAAI;AACA,UAAMrB,MAAM,GAAG,MAAMH,GAAG,CAACyB,OAAJ,CAAYC,MAAZ,CAAmBC,MAAnB,CAA0BC,MAA1B,CAAiC;AAClDC,MAAAA,UAAU,EAAG7B,GAAG,CAACS,SADiC;AAElDqB,MAAAA,gBAAgB,EAAG,IAAIC,IAAJ,EAF+B;AAGlDC,MAAAA,eAAe,EAAGhB,OAAO,CAACiB,QAHwB;AAIlDC,MAAAA,cAAc,EAAGlB,OAAO,CAACmB,QAJyB;AAKlDjB,MAAAA,cAAc,EAAGA,cALiC;AAMlDC,MAAAA,SAAS,EAAGA,SANsC;AAOlDC,MAAAA,UAAU,EAAGA,UAPqC;AAQlDC,MAAAA,aAAa,EAAGA,aARkC;AASlDC,MAAAA,YAAY,EAAGA,YATmC;AAUlDc,MAAAA,eAAe,EAAGpB,OAAO,CAACmB,QAVwB;AAWlDZ,MAAAA,aAAa,EAAGc,QAAQ,CAACd,aAAD;AAX0B,KAAjC,CAArB,CADA,CAcA;;AACAvB,IAAAA,GAAG,CAAC6B,UAAJ,GAAiB1B,MAAM,CAACmC,UAAP,CAAkBT,UAAnC;AACA7B,IAAAA,GAAG,CAACY,MAAJ,GAAW,SAAX;AACAV,IAAAA,IAAI;AACP,GAlBD,CAkBE,OAAOS,KAAP,EAAc;AACZV,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAGH,KAAK,CAACG;AAAjB,KAArB;AACH;AACJ,CAzBD;;AA2BA,MAAMyB,WAAW,GAAG,OAAOvC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AAC1C,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMH,GAAG,CAACyB,OAAJ,CAAYC,MAAZ,CAAmBC,MAAnB,CAA0Ba,OAA1B,EAArB;AACA,WAAOvC,GAAG,CAACwC,IAAJ,CAAStC,MAAT,CAAP;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,WAAOV,GAAG,CAACwC,IAAJ,CAAS9B,KAAT,CAAP;AACD;AACF,CAPH;;eASe;AACXZ,EAAAA,cADW;AAEXgB,EAAAA,WAFW;AAGXwB,EAAAA;AAHW,C","sourcesContent":["import { sequelize } from \"../models/init-models\"\n\nconst getOrderNumber = async (req,res,next)=>{\n    try {\n        const result = await sequelize.query (\"select 'ORD-'||to_char(now(),'DDMMYYY')||lpad(nextval('order_name_seq')||'',4,'0') as ordername\",\n        {\n            type : sequelize.QueryTypes.SELECT\n        })\n        req.orderName = result[0].ordername;\n        next();\n    } catch (error) {\n        res.status(404).json({message : error.message})\n    }\n}\n\nconst createOrder = async (req,res,next)=>{\n    const {summary} = req.summaryCart;\n    const {order_discount,order_tax,order_city,order_address,order_status,order_user_id} = req.body;\n    \n    try {\n        const result = await req.context.models.orders.create({\n            order_name : req.orderName,\n            order_created_on : new Date(),\n            order_total_qty : summary.totalQty,\n            order_subtotal : summary.subTotal,\n            order_discount : order_discount,\n            order_tax : order_tax,\n            order_city : order_city,\n            order_address : order_address,\n            order_status : order_status,\n            order_total_due : summary.subTotal,\n            order_user_id : parseInt(order_user_id)\n        })    \n        //res.send(result)\n        req.order_name = result.dataValues.order_name;\n        req.status=\"ORDERED\";\n        next();\n    } catch (error) {\n        res.status(404).json({message : error.message})\n    }   \n}\n\nconst findAllRows = async (req, res, next) => {\n    try {\n      const result = await req.context.models.orders.findAll();\n      return res.send(result);\n    } catch (error) {\n      return res.send(error);\n    }\n  };\n\nexport default {\n    getOrderNumber,\n    createOrder,\n    findAllRows\n}"],"file":"OrderController.js"}