{"version":3,"sources":["../../server/controller/ProductController.js"],"names":["findAllRows","req","res","result","context","models","products","findAll","send","error","sendStatus","createProduct","files","fields","fileAttrb","create","prod_name","value","prod_price","parseInt","prod_stock","prod_desc","prod_cate_id","prod_rating","prod_views","prod_user_id","prod_url_image","file","newFilename","status","json","message","updateProduct","singlePart","UpDonwloadHelper","uploadSingleFile","attrb","filename","update","prod_view_count","prod_urlimage","returning","where","prod_id","params","id","updateStock","next","cart_id","body","line_items","lite_cart_id","i","length","result1","findOne","dataValues","lite_prod_id","lite_qty","deleteRow","destroy"],"mappings":";;;;;;;AAAA;;;;AAGA,MAAMA,WAAW,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACpC,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4BC,OAA5B,EAArB;AACA,WAAOL,GAAG,CAACM,IAAJ,CAASL,MAAT,CAAP;AACH,GAHD,CAGE,OAAOM,KAAP,EAAc;AACZ,WAAOP,GAAG,CAACQ,UAAJ,CAAe,GAAf,EAAoBF,IAApB,CAAyB,eAAzB,CAAP;AACH;AAEJ,CARD;;AAUA,MAAMG,aAAa,GAAG,OAAOV,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAACU,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBZ,GAAG,CAACa,SAA5B;;AAEA,MAAI;AACA,UAAMX,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4BS,MAA5B,CAAmC;AACpDC,MAAAA,SAAS,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUI,KAD+B;AAEpDC,MAAAA,UAAU,EAAEC,QAAQ,CAACN,MAAM,CAAC,CAAD,CAAN,CAAUI,KAAX,CAFgC;AAGpDG,MAAAA,UAAU,EAAED,QAAQ,CAACN,MAAM,CAAC,CAAD,CAAN,CAAUI,KAAX,CAHgC;AAIpDI,MAAAA,SAAS,EAAER,MAAM,CAAC,CAAD,CAAN,CAAUI,KAJ+B;AAKpDK,MAAAA,YAAY,EAAEH,QAAQ,CAACN,MAAM,CAAC,CAAD,CAAN,CAAUI,KAAX,CAL8B;AAMpDM,MAAAA,WAAW,EAAEJ,QAAQ,CAACN,MAAM,CAAC,CAAD,CAAN,CAAUI,KAAX,CAN+B;AAOpDO,MAAAA,UAAU,EAAEL,QAAQ,CAACN,MAAM,CAAC,CAAD,CAAN,CAAUI,KAAX,CAPgC;AAQpDQ,MAAAA,YAAY,EAAEN,QAAQ,CAACN,MAAM,CAAC,CAAD,CAAN,CAAUI,KAAX,CAR8B;AASpDS,MAAAA,cAAc,EAAEd,KAAK,CAAC,CAAD,CAAL,CAASe,IAAT,CAAcC;AATsB,KAAnC,CAArB;AAWA,WAAO1B,GAAG,CAACM,IAAJ,CAASL,MAAT,CAAP;AACH,GAbD,CAaE,OAAOM,KAAP,EAAc;AACZ,WAAOP,GAAG,CAAC2B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAEtB,KAAK,CAACsB;AADS,KAArB,CAAP;AAGH;AACR,CArBD;;AAuBA,MAAMC,aAAa,GAAG,OAAO/B,GAAP,EAAYC,GAAZ,KAAoB;AAEtC,MAAI;AACA,UAAM+B,UAAU,GAAG,MAAMC,8BAAiBC,gBAAjB,CAAkClC,GAAlC,CAAzB;AACA,UAAM;AAAEmC,MAAAA,KAAK,EAAE;AAAET,QAAAA,IAAF;AAAQd,QAAAA,MAAR;AAAgBwB,QAAAA;AAAhB,OAAT;AAAqCR,MAAAA,MAAM,EAAE;AAAEA,QAAAA;AAAF;AAA7C,QAA4DI,UAAlE;;AAEA,QAAIJ,MAAM,KAAK,SAAf,EAA0B;AACtB,UAAI;AACA,cAAM1B,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4BgC,MAA5B,CACjB;AACItB,UAAAA,SAAS,EAAEH,MAAM,CAACG,SADtB;AAEIE,UAAAA,UAAU,EAAEL,MAAM,CAACK,UAFvB;AAGIE,UAAAA,UAAU,EAAED,QAAQ,CAACN,MAAM,CAACO,UAAR,CAHxB;AAIIC,UAAAA,SAAS,EAAER,MAAM,CAACQ,SAJtB;AAKIC,UAAAA,YAAY,EAAEH,QAAQ,CAACN,MAAM,CAACS,YAAR,CAL1B;AAMIC,UAAAA,WAAW,EAAEJ,QAAQ,CAACN,MAAM,CAACU,WAAR,CANzB;AAOIgB,UAAAA,eAAe,EAAEpB,QAAQ,CAACN,MAAM,CAAC0B,eAAR,CAP7B;AAQId,UAAAA,YAAY,EAAEN,QAAQ,CAACN,MAAM,CAACY,YAAR,CAR1B;AASIe,UAAAA,aAAa,EAAEH;AATnB,SADiB,EAYjB;AAAEI,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAExB,QAAQ,CAAClB,GAAG,CAAC2C,MAAJ,CAAWC,EAAZ;AAAnB;AAA1B,SAZiB,CAArB;AAcA,eAAO3C,GAAG,CAACM,IAAJ,CAASL,MAAT,CAAP;AACH,OAhBD,CAgBE,OAAOM,KAAP,EAAc;AACZ,eAAOP,GAAG,CAACM,IAAJ,CAAS,GAAT,EAAcA,IAAd,CAAmBC,KAAnB,CAAP;AACH;AAGJ;;AACD,WAAOP,GAAG,CAACM,IAAJ,CAASqB,MAAT,CAAP;AACH,GA5BD,CA4BE,OAAOpB,KAAP,EAAc;AACZ,WAAOP,GAAG,CAACM,IAAJ,CAASC,KAAT,CAAP;AACH;AACJ,CAjCD;;AAmCA,MAAMqC,WAAW,GAAG,OAAO7C,GAAP,EAAYC,GAAZ,EAAgB6C,IAAhB,KAAyB;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAc/C,GAAG,CAACgD,IAAxB;;AACA,MAAI;AACA,UAAM9C,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmB6C,UAAnB,CAA8B3C,OAA9B,CAAsC;AACvDmC,MAAAA,KAAK,EAAE;AAAES,QAAAA,YAAY,EAAEH;AAAhB;AADgD,KAAtC,CAArB;;AAGA,SAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGjD,MAAM,CAACkD,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACjC,YAAME,OAAO,GAAG,MAAMrD,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4BiD,OAA5B,CAAoC;AACxDb,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAExC,MAAM,CAACiD,CAAD,CAAN,CAAUI,UAAV,CAAqBC;AAAhC;AADiD,OAApC,CAAtB;AAGC,YAAMxD,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4BgC,MAA5B,CACJ;AACElB,QAAAA,UAAU,EAAED,QAAQ,CAACmC,OAAO,CAACE,UAAR,CAAmBpC,UAApB,CAAR,GAA0CD,QAAQ,CAAChB,MAAM,CAACiD,CAAD,CAAN,CAAUI,UAAV,CAAqBE,QAAtB;AADhE,OADI,EAIJ;AAAEjB,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAExB,QAAQ,CAAChB,MAAM,CAACiD,CAAD,CAAN,CAAUI,UAAV,CAAqBC,YAAtB;AAAnB;AAA1B,OAJI,CAAN;AAML;;AACDV,IAAAA,IAAI;AACP,GAhBD,CAgBE,OAAOtC,KAAP,EAAc;AACdP,IAAAA,GAAG,CAAC2B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBrB,KAArB;AACD;AACF,CArBH;;AAuBA,MAAMkD,SAAS,GAAG,OAAO1D,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM2C,EAAE,GAAG5C,GAAG,CAAC2C,MAAJ,CAAWC,EAAtB;;AACA,MAAI;AACA,UAAM1C,MAAM,GAAG,MAAMF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4BsD,OAA5B,CAAoC;AACrDlB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAExB,QAAQ,CAAC0B,EAAD;AAAnB;AAD8C,KAApC,CAArB;AAGA,WAAO3C,GAAG,CAACM,IAAJ,CAAS,YAAYL,MAAZ,GAAqB,QAA9B,CAAP;AACH,GALD,CAKE,OAAOM,KAAP,EAAc;AACZ,WAAOP,GAAG,CAACQ,UAAJ,CAAe,GAAf,EAAoBF,IAApB,CAAyB,iBAAzB,CAAP;AACH;AAEJ,CAXD;;eAae;AACXR,EAAAA,WADW;AAEXW,EAAAA,aAFW;AAGXqB,EAAAA,aAHW;AAIX2B,EAAAA,SAJW;AAKXb,EAAAA;AALW,C","sourcesContent":["import UpDonwloadHelper from '../middleware/UploadDonwloadHelper';\n\n\nconst findAllRows = async (req, res) => {\n    try {\n        const result = await req.context.models.products.findAll();\n        return res.send(result);\n    } catch (error) {\n        return res.sendStatus(404).send(\"no data found\");\n    }\n\n}\n\nconst createProduct = async (req, res) => {\n        const {files, fields} = req.fileAttrb;\n\n        try {\n            const result = await req.context.models.products.create({\n                prod_name: fields[0].value,\n                prod_price: parseInt(fields[1].value),\n                prod_stock: parseInt(fields[2].value),\n                prod_desc: fields[3].value,\n                prod_cate_id: parseInt(fields[4].value),\n                prod_rating: parseInt(fields[5].value),\n                prod_views: parseInt(fields[6].value),\n                prod_user_id: parseInt(fields[7].value),\n                prod_url_image: files[0].file.newFilename\n            });\n            return res.send(result);\n        } catch (error) {\n            return res.status(404).json({\n                message: error.message,\n            })\n        }\n}\n\nconst updateProduct = async (req, res) => {\n\n    try {\n        const singlePart = await UpDonwloadHelper.uploadSingleFile(req);\n        const { attrb: { file, fields, filename }, status: { status } } = singlePart;\n        \n        if (status === 'succeed') {\n            try {\n                const result = await req.context.models.products.update(\n                    {\n                        prod_name: fields.prod_name,\n                        prod_price: fields.prod_price,\n                        prod_stock: parseInt(fields.prod_stock),\n                        prod_desc: fields.prod_desc,\n                        prod_cate_id: parseInt(fields.prod_cate_id),\n                        prod_rating: parseInt(fields.prod_rating),\n                        prod_view_count: parseInt(fields.prod_view_count),\n                        prod_user_id: parseInt(fields.prod_user_id),\n                        prod_urlimage: filename\n                    },\n                    { returning: true, where: { prod_id: parseInt(req.params.id) } }\n                );\n                return res.send(result);\n            } catch (error) {\n                return res.send(404).send(error);\n            }\n\n\n        }\n        return res.send(status);\n    } catch (error) {\n        return res.send(error);\n    }\n}\n\nconst updateStock = async (req, res,next) => {\n    const { cart_id } = req.body;\n    try {\n        const result = await req.context.models.line_items.findAll({\n            where: { lite_cart_id: cart_id },\n        })\n        for(let i = 0; i < result.length; i++){\n             const result1 = await req.context.models.products.findOne({\n               where: { prod_id: result[i].dataValues.lite_prod_id },\n             });\n              await req.context.models.products.update(\n                {\n                  prod_stock: parseInt(result1.dataValues.prod_stock) - parseInt(result[i].dataValues.lite_qty),\n                },\n                { returning: true, where: { prod_id: parseInt(result[i].dataValues.lite_prod_id) } }\n              );\n        }\n        next();\n    } catch (error) {\n      res.status(404).json(error);\n    }\n  };\n\nconst deleteRow = async (req, res) => {\n    const id = req.params.id;\n    try {\n        const result = await req.context.models.products.destroy({\n            where: { prod_id: parseInt(id) }\n        });\n        return res.send(\"delete \" + result + \" rows.\")\n    } catch (error) {\n        return res.sendStatus(404).send(\"Data not found.\")\n    }\n\n}\n\nexport default {\n    findAllRows,\n    createProduct,\n    updateProduct,\n    deleteRow,\n    updateStock\n} "],"file":"ProductController.js"}